/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 30 22:56:10 GMT 2024
 */

package com.jwetherell.algorithms.mathematics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jwetherell.algorithms.mathematics.Permutations;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Permutations_ESTest extends Permutations_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer[] integerArray0 = new Integer[0];
      Permutations.getAllPermutations(integerArray0);
      Permutations.getAllPermutations(integerArray0);
      Permutations.permutations("i0");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer((-3004));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-3004));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-3004));
      integerArray0[2] = integer2;
      String string0 = "";
      Integer integer3 = new Integer((-2139));
      Integer integer4 = Integer.getInteger("", integer3);
      integerArray0[3] = integer4;
      Integer integer5 = new Integer((-2139));
      Integer.toUnsignedLong(0);
      integerArray0[4] = integer5;
      int int0 = 1;
      Integer integer6 = new Integer(1);
      integerArray0[5] = integer6;
      String string1 = "";
      Integer integer7 = Integer.getInteger("", (-2139));
      Integer.compareUnsigned(int0, 1168);
      integerArray0[6] = integer7;
      // Undeclared exception!
      Permutations.getAllPermutations(integerArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Permutations.permutations((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.mathematics.Permutations", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "_/=?:zH#CwHT@l'_";
      // Undeclared exception!
      try { 
        Permutations.permutations("_/=?:zH#CwHT@l'_");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.mathematics.Permutations", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "*5JvEO1f";
      // Undeclared exception!
      Permutations.permutations("*5JvEO1f");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Permutations.permutations("Vv7");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        Permutations.getAllPermutations((Integer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.mathematics.Permutations", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        Permutations.permutations("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jwetherell.algorithms.mathematics.Permutations", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "VF{c2^a I";
      // Undeclared exception!
      Permutations.permutations("VF{c2^a I");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = new Integer(3146);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(3146);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(1);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[0]);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(3146);
      integerArray0[5] = integer5;
      List<List<Integer>> list0 = Permutations.getAllPermutations(integerArray0);
      assertEquals(720, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Permutations.permutations("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jwetherell.algorithms.mathematics.Permutations", e);
      }
  }
}
