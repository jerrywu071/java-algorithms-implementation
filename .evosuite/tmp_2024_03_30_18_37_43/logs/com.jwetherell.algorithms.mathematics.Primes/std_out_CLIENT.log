* Starting client
* Connecting to master process on port 9975
* Analyzing classpath: 
  - /home/dimitri/Documents/GitHub/java-algorithms-implementation/target/classes
  - /home/dimitri/.m2/repository/junit/junit/4.12/junit-4.12.jar
  - /home/dimitri/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
* Finished analyzing classpath
* Generating tests for class com.jwetherell.algorithms.mathematics.Primes
* Test criteria:
  - Line Coverage
  - Branch Coverage
  - Exception
  - Mutation testing (weak)
  - Method-Output Coverage
  - Top-Level Method Coverage
  - No-Exception Top-Level Method Coverage
  - Context Branch Coverage
* Setting up search algorithm for whole suite generation
[MASTER] 18:45:32.534 [pool-2-thread-1] WARN  TestSuiteSerialization - Cannot load tests because file does not exist: /home/dimitri/Documents/GitHub/java-algorithms-implementation/.evosuite/evosuite-seeds/com.jwetherell.algorithms.mathematics.Primes.seed
* Loaded 0 tests from /home/dimitri/Documents/GitHub/java-algorithms-implementation/.evosuite/evosuite-seeds/com.jwetherell.algorithms.mathematics.Primes.seed
* Total number of test goals: 
  - Line 78
  - Branch 67
  - Exception 0
  - MutationFactory 478
  - Output 12
  - Method 5
  - MethodNoException 5
  - CBranchFitnessFactory 67
* Using seed 1711838730167
* Starting evolution
* Search finished after 91s and 80 generations, 44781 statements, best individual has fitness: 14.166666666666666
* Writing sequences to pool
* Minimizing test suite
[MASTER] 18:47:19.338 [pool-2-thread-1] WARN  TestSuiteMinimizer - Minimization timeout. Roll back to original test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 78
* Number of covered goals: 78
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Coverage analysis for criterion EXCEPTION
* Coverage of criterion EXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion WEAKMUTATION
* Coverage of criterion WEAKMUTATION: 98%
* Total number of goals: 478
* Number of covered goals: 470
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 12
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion METHODNOEXCEPTION
* Coverage of criterion METHODNOEXCEPTION: 100%
* Total number of goals: 5
* Number of covered goals: 5
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 94%
* Total number of goals: 67
* Number of covered goals: 63
* Generated 42 tests with total length 381
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:47:33.652 [pool-2-thread-1] WARN  SimpleMutationAssertionGenerator - Reached maximum time to generate assertions, aborting assertion generation
* Resulting test suite's mutation score: 34%
* Compiling and checking tests
[MASTER] 18:47:41.814 [pool-2-thread-1] WARN  JUnitAnalyzer - Found unstable test named test0 -> class java.lang.OutOfMemoryError: Java heap space
[MASTER] 18:47:41.815 [pool-2-thread-1] WARN  JUnitAnalyzer - Failing test:
 Primes.getPrimeFactorization(1L);
int int0 = 0;
Primes.sieveOfEratosthenes(0);
Primes primes0 = new Primes();
Primes.sieveOfEratosthenes(1073741824);

* Writing JUnit test case 'Primes_ESTest' to /home/dimitri/Documents/GitHub/java-algorithms-implementation/.evosuite/tmp_2024_03_30_18_37_43/tests
* Done!

