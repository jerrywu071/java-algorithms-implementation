/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 30 22:45:28 GMT 2024
 */

package com.jwetherell.algorithms.mathematics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jwetherell.algorithms.mathematics.Multiplication;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Multiplication_ESTest extends Multiplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Multiplication.multiplyUsingLoopWithStringInput("waxNUZSLy8DIho!ww", "waxNUZSLy8DIho!ww");
      int int0 = 0;
      Multiplication.multiplication(0, 0);
      Multiplication.multiplyUsingLoopWithStringInput("587586002152332209615618343438642961", "587586002152332209615618343438642961");
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingFFT("345257309925360552070939380444326985211708065201000652831274893234847521", "waxNUZSLy8DIho!ww");
      Multiplication.multiplyUsingLoopWithStringInput("!ljPejBcI(qZ:R1", "345257309925360552070939380444326985211708065201000652831274893234847521");
      Multiplication.multiplyUsingFFT("#&Jm;r<@.~B", "345257309925360552070939380444326985211708065201000652831274893234847521");
      Multiplication.multiplyUsingFFT("waxNUZSLy8DIho!ww", "4334698193278788548971811463244948175609683419978140238061846341073013240733064421");
      int int1 = 0;
      Multiplication.multiplyUsingLoopWithIntegerInput(0, 0);
      int int2 = (-4517);
      Multiplication.multiplyUsingLogs(0, (-4517));
      Multiplication.multiplyUsingRecursion(0, 0);
      Multiplication.multiplyUsingLoopWithStringInput("-310601985871837557225073814559118803196422756674375514599242241588376744258973933257661", "U[fcVjJIC]-5");
      // Undeclared exception!
      Multiplication.multiplyUsingLoopWithStringInput("4334698193278788548971811463244948175609683419978140238061846341073013240733064421", "4334698193278788548971811463244948175609683419978140238061846341073013240733064421");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = (-878);
      Multiplication.multiplication((-878), (-878));
      int int1 = (-1199);
      Multiplication.multiplyUsingLoop((-878), (-1199));
      Multiplication.multiplyUsingFFT("com.jwetherell.algorithms.mathematics.Multiplication", "com.jwetherell.algorithms.mathematics.Multiplication");
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingLoopWithStringInput("", "ykyl,3]b.-!");
      Multiplication.multiplyUsingFFT("213780573950261017729532480003479560026609457326578550689684541191495530587031031179690674547459456709969", "213780573950261017729532480003479560026609457326578550689684541191495530587031031179690674547459456709969");
      int int2 = 1;
      Multiplication.multiplyUsingLoop(int2, int1);
      int int3 = 54;
      Multiplication.multiplyUsingLoop(int0, int3);
      int int4 = 1;
      Multiplication.multiplyUsingLogs(int4, int1);
      int int5 = 0;
      int int6 = (-1);
      Multiplication.multiplyUsingLoop(int5, int6);
      int int7 = 0;
      int int8 = 622;
      Multiplication.multiplyUsingShift(int7, int8);
      int int9 = 1;
      int int10 = 10;
      Multiplication.multiplyUsingLogs(int9, int10);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = (-1580);
      int int1 = 48;
      Multiplication.multiplyUsingLoopWithIntegerInput((-1580), 48);
      // Undeclared exception!
      Multiplication.multiplyUsingLoop(48, (-75840));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 10;
      Multiplication.multiplyUsingLoopWithIntegerInput(10, 10);
      Multiplication multiplication0 = new Multiplication();
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT("", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Multiplication.multiplyUsingFFT("S7V0Yx", "`G.X/-j");
      Multiplication.multiplyUsingFFT("`G.X/-j", "z)%qoN`@E+beVk<Is");
      int int0 = (-2185);
      Multiplication.multiplyUsingShift(1404, (-2185));
      Multiplication.multiplyUsingFFT("z)%qoN`@E+beVk<Is", "S7V0Yx");
      Multiplication.multiplyUsingLoopWithStringInput("m4f3 K[9jk]T", "9275625542968474208857172");
      Multiplication.multiplyUsingFFT("10124750894944640261638284", "S7V0Yx");
      Multiplication.multiplyUsingLoopWithStringInput("*J$g<99%VkX#pn5t", "29375678878318215749830252963932");
      Multiplication.multiplyUsingLoopWithStringInput("z)%qoN`@E+beVk<Is", "9275625542968474208857172");
      Multiplication.multiplyUsingFFT("S7V0Yx", "574548185870864500302577172167270956392");
      Multiplication.multiplyUsingShift((-2185), 2);
      Multiplication.multiplyUsingShift(1404, 1006);
      Multiplication.multiplyUsingFFT("1666978593684707747836389237742471436559926216", "-4515270710660738253-10-4");
      Multiplication.multiplyUsingLoopWithStringInput("z)%qoN`@E+beVk<Is", "&@oJ\"Lak`9M,|-P&|");
      Multiplication.multiplyUsingShift(3021, 1980);
      Multiplication.multiplyUsingFFT("29375678878318215749830252963932", "68394905533883358760728633362369379346437924");
      Multiplication.multiplyUsingLoopWithStringInput("-752685961936298839234521673531154337551447502900985236019215369358744", "%,");
      Multiplication.multiplyUsingLoopWithStringInput("574548185870864500302577172167270956392", "9275625542968474208857172");
      Multiplication.multiplyUsingLoopWithStringInput("574548185870864500302577172167270956392", "c\"O+aOH.m7d.J");
      // Undeclared exception!
      Multiplication.multiplyUsingFFT("-752685961936298839234521673531154337551447502900985236019215369358744", "9275625542968474208857172");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingFFT("-rl(sHL5I_@", "-rl(sHL5I_@");
      Multiplication.multiplyUsingLoopWithStringInput("", "2(s5zyZJ$");
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT("", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Multiplication.multiplyUsingLoopWithStringInput("\"[c;BG3zcl{af", "a3 O/");
      Multiplication.multiplyUsingLoop(480, (-1291));
      Multiplication.multiplyUsingFFT("-4515270710660738253-10-4", "\"[c;BG3zcl{af");
      Multiplication.multiplyUsingLoopWithIntegerInput(480, 480);
      Multiplication.multiplyUsingFFT("-4515270710660738253-10-4", "a3 O/");
      Multiplication.multiplyUsingRecursion(480, 480);
      Multiplication.multiplyUsingLoopWithStringInput("", "com.jwetherell.algorithms.mathematics.Multiplication");
      Multiplication.multiplyUsingLogs((-3253), (-1291));
      Multiplication.multiplyUsingLoopWithStringInput("-4515270710660738253-10-4", "\"[c;BG3zcl{af");
      Multiplication.multiplication(934, (-787));
      Multiplication.multiplyUsingRecursion((-1628), 1);
      Multiplication.multiplication((-1628), (-1291));
      Multiplication.multiplyUsingLoop((-1093), (-1267));
      Multiplication.multiplyUsingLoopWithStringInput("-464684118389868150486148287774", "com.jwetherell.algorithms.mathematics.Multiplication");
      Multiplication.multiplyUsingFFT("--588311347441047721663737800178848576", "of4(_5U^YS&");
      Multiplication multiplication0 = new Multiplication();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Multiplication.multiplyUsingLoop((-643), (-643));
      Multiplication.multiplyUsingShift(2269, 2269);
      Multiplication.multiplication(0, 0);
      Multiplication.multiplyUsingLoopWithIntegerInput(0, 0);
      Multiplication.multiplyUsingShift(0, 1);
      Multiplication.multiplyUsingShift((-1557), 0);
      Multiplication.multiplication(0, (-463));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Multiplication.multiplication(1700, 1700);
      Multiplication.multiplyUsingShift(1700, 0);
      Multiplication.multiplication(2, 0);
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingShift(0, (-2000));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Multiplication.multiplyUsingLoopWithIntegerInput((-1008), (-1008));
      Multiplication.multiplyUsingShift((-1008), 10);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Multiplication.multiplyUsingLogs((-2296), (-2296));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingLoopWithStringInput("E6*a^K,SsJaW)D.t", "9,mOfWF5nEUuY`");
      Multiplication.multiplyUsingLoopWithStringInput("4LkjC';zZ~w5sy7Z", "4LkjC';zZ~w5sy7Z");
      Multiplication.multiplyUsingLoopWithIntegerInput(0, 0);
      Multiplication.multiplyUsingLogs((-2422), 0);
      Multiplication.multiplyUsingLoop(0, 48);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Multiplication.multiplyUsingShift(0, 0);
      Multiplication.multiplication(1059, 0);
      Multiplication.multiplyUsingLoopWithIntegerInput(270, (-2191));
      Multiplication.multiplyUsingLogs(1, (-1215));
      Multiplication.multiplication(1819, 0);
      Multiplication.multiplyUsingShift(551, (-204));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Multiplication.multiplication((-3881), 3563);
      Multiplication.multiplyUsingLogs(3563, (-949));
      Multiplication.multiplyUsingLoop((-949), 0);
      Multiplication.multiplyUsingLogs((-3881), 1483);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Multiplication.multiplyUsingFFT("+", "+");
      Multiplication.multiplyUsingLoop(1745, 1745);
      Multiplication.multiplication(1745, 1745);
      Multiplication.multiplyUsingLoop(0, 0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "&tM]+<K\"vd{rp!j&k";
      Multiplication.multiplyUsingLoopWithStringInput("&tM]+<K\"vd{rp!j&k", "&tM]+<K\"vd{rp!j&k");
      Multiplication.multiplyUsingLoopWithIntegerInput(51, 51);
      String string1 = "c=Zv";
      Multiplication.multiplyUsingLoopWithStringInput("c=Zv", "10-92210251480982866915927210878-2084-8081");
      Multiplication.multiplyUsingLoopWithStringInput("c=Zv", "10-92210251480982866915927210878-2084-8081");
      Multiplication.multiplyUsingRecursion(51, 51);
      Multiplication.multiplyUsingShift(0, 2952);
      int int0 = 0;
      Multiplication.multiplication(0, 0);
      Multiplication.multiplyUsingLogs(0, 707);
      Multiplication.multiplication(2952, 2601);
      int int1 = 129;
      Multiplication.multiplyUsingLoop(129, 0);
      Multiplication.multiplyUsingRecursion(0, 0);
      Multiplication.multiplyUsingLoopWithStringInput("10-92210251480982866915927210878-2084-8081", "c=Zv");
      Multiplication.multiplication(0, (-433));
      String string2 = null;
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingLoopWithStringInput((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.mathematics.Multiplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Multiplication.multiplyUsingLogs(2088, 0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Multiplication.multiplyUsingFFT("N_(TOs$z_4?k^E<-", "N_(TOs$z_4?k^E<-");
      Multiplication.multiplyUsingShift(2150, 2150);
      Multiplication.multiplyUsingLoopWithIntegerInput(2150, 2);
      Multiplication.multiplyUsingShift(276, 2);
      Multiplication.multiplyUsingFFT("53550352814533199807352867103208721", "0");
      Multiplication.multiplyUsingFFT("0", "");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Multiplication.multiplyUsingLoop(0, 0);
      Multiplication.multiplyUsingLoop(0, 0);
      Multiplication.multiplyUsingLoop((-1700), 0);
      Multiplication.multiplyUsingLoopWithStringInput("", "%-GMDP|N");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Multiplication.multiplyUsingShift(858, 858);
      Multiplication.multiplyUsingShift(858, 858);
      Multiplication.multiplication(858, 0);
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingLoopWithStringInput("", "pJ");
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingLoopWithStringInput("'#mH-", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.mathematics.Multiplication", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Multiplication.multiplyUsingShift(0, 0);
      Multiplication.multiplyUsingLoopWithIntegerInput((-2774), (-1300));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Multiplication.multiplication(0, 0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingLoopWithStringInput("", "");
      Multiplication.multiplyUsingLoopWithIntegerInput(0, 0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 2145;
      Multiplication.multiplyUsingShift(2145, 2145);
      Multiplication.multiplyUsingLogs(2145, 2145);
      Multiplication.multiplyUsingLoopWithIntegerInput(2145, 2145);
      Multiplication.multiplyUsingLogs(2145, 4601025);
      int int1 = (-4204);
      Multiplication.multiplyUsingLogs((-4204), 2145);
      Multiplication.multiplyUsingLoopWithStringInput("|\"Ln;CW", "");
      int int2 = (-1);
      Multiplication.multiplyUsingRecursion(2145, (-1));
      int int3 = (-2563);
      Multiplication.multiplyUsingLoopWithIntegerInput((-2563), (-4204));
      int int4 = 0;
      Multiplication.multiplyUsingLoop((-2563), 0);
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingLoopWithStringInput("0", "|\"Ln;CW");
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT("", "~FRw{[{ Bl@VYv");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Multiplication.multiplication((-3892), 3563);
      Multiplication.multiplyUsingLogs(3563, 3559);
      Multiplication.multiplyUsingLoop(3559, 0);
      Multiplication.multiplyUsingLogs((-3892), 1483);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Multiplication.multiplyUsingLogs(0, 0);
      Multiplication.multiplyUsingLoop(0, (-563));
      Multiplication.multiplyUsingLoopWithIntegerInput((-563), 2);
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingFFT("|&#pYq", "IPX");
      Multiplication.multiplyUsingRecursion((-721), 2);
      Multiplication.multiplyUsingLoopWithStringInput("IPX", "IPX");
      Multiplication.multiplyUsingLoop(1, 0);
      Multiplication.multiplyUsingLoop(1, (-2309));
      Multiplication.multiplyUsingLoopWithIntegerInput((-563), (-1));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT("", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Multiplication.multiplyUsingLoopWithStringInput("", "e dGUm");
      Multiplication.multiplyUsingShift((-908), (-908));
      Multiplication.multiplyUsingLoop(1, 1262);
      Multiplication.multiplyUsingLoopWithIntegerInput((-908), 1262);
      Multiplication.multiplication((-908), (-1145896));
      Multiplication.multiplyUsingRecursion(10, 10);
      Multiplication.multiplyUsingLoopWithIntegerInput(10, (-908));
      Multiplication.multiplyUsingLogs(1, 2560);
      Multiplication.multiplyUsingRecursion(0, (-1612));
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingShift(48, 1945);
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT("", "l`%BTXM.");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 5097;
      Multiplication.multiplyUsingLogs(5097, 5097);
      Multiplication.multiplyUsingLoop((-2604), (-2604));
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingLoopWithStringInput("", "");
      Multiplication.multiplyUsingLoopWithStringInput("", "");
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT((String) null, "2P69f");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Multiplication.multiplyUsingLoopWithStringInput("F,~3i5M.K {CBw!", "O~-fO ");
      Multiplication.multiplyUsingLoopWithStringInput("F,~3i5M.K {CBw!", "-8814327982921462569-16530");
      Multiplication.multiplication(2312, 999);
      Multiplication.multiplyUsingLoopWithIntegerInput(2312, 2312);
      Multiplication multiplication0 = new Multiplication();
      Multiplication.multiplyUsingLoopWithStringInput("-8814327982921462569-16530", "");
      Multiplication.multiplyUsingLoopWithStringInput("F,~3i5M.K {CBw!", "#hbcj");
      Multiplication.multiplication(2312, 2312);
      Integer integer0 = new Integer(2009);
      Integer integer1 = new Integer(904);
      Multiplication.multiplyUsingRecursion(1, 752);
      Multiplication.multiplyUsingLoopWithIntegerInput(0, 0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Multiplication.multiplyUsingShift((-682), (-682));
      Multiplication.multiplyUsingLoopWithIntegerInput((-682), (-682));
      Multiplication.multiplyUsingShift((-682), 465124);
      Multiplication.multiplyUsingLogs(1, 465124);
      Multiplication.multiplication((-3509), 465124);
      Multiplication.multiplyUsingLoopWithStringInput("&}Q<fD/)g+)z,\"{8=/", "com.jwetherell.algorithms.mathematics.Multiplication");
      Multiplication.multiplyUsingShift(1483, (-1));
      Multiplication.multiplyUsingFFT("!zBgq", "-126927525822328242819327064772768321028324959336498592604204768409402-3-2");
      // Undeclared exception!
      try { 
        Multiplication.multiplyUsingFFT("-126927525822328242819327064772768321028324959336498592604204768409402-3-2", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Multiplication.multiplyUsingLoopWithStringInput("\"[c;BG3zcl{af", "a3 O/");
      Multiplication.multiplyUsingLoop(480, (-1291));
      Multiplication.multiplyUsingFFT("-4515270710660738253-10-4", "\"[c;BG3zcl{af");
      Multiplication.multiplyUsingLoopWithIntegerInput(480, 480);
      Multiplication.multiplyUsingFFT("-4515270710660738253-10-4", "a3 O/");
      Multiplication.multiplyUsingRecursion(480, 480);
      Multiplication.multiplyUsingLoopWithStringInput("", "com.jwetherell.algorithms.mathematics.Multiplication");
      Multiplication.multiplyUsingLogs((-3253), (-1291));
      Multiplication.multiplyUsingLoopWithStringInput("-4515270710660738253-10-4", "\"[c;BG3zcl{af");
      Multiplication.multiplication(934, (-787));
      Multiplication.multiplyUsingRecursion((-1628), 1);
      Multiplication.multiplication((-1628), (-1291));
      Multiplication.multiplyUsingLoop((-1093), (-1267));
      Multiplication.multiplyUsingLoopWithStringInput("-464684118389868150486148287774", "com.jwetherell.algorithms.mathematics.Multiplication");
      Multiplication.multiplyUsingFFT("--588311347441047721663737800178848576", "-26911981097636730655211415310574285742615062536854326178078746421585800731198743408");
      Multiplication multiplication0 = new Multiplication();
  }
}
